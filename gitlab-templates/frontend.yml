default:
  image: docker:27
  services:
    - docker:27-dind
  before_script: 
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

variables: 
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - build
  - test
  - review

include: 
  - gitlab-templates/base-line.yml

.frontend:
  extends: 
    - .base-line

build:
  stage: build
  extends: 
    - .frontend
  script:
    - docker pull $CI_REGISTRY_IMAGE:frontend-latest || true
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from $CI_REGISTRY_IMAGE:frontend-latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:frontend-latest frontend/
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:frontend-latest

unit-test:
  stage: test
  extends: 
    - .frontend
  script:
    - docker compose up -d
    - sleep 15
    - docker compose exec -T client npm run test:coverage
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts: 
    paths:
    - coverage/
    - test-report/

lint-test:
  stage: test
  extends: 
    - .frontend
  script:
    - docker compose up -d
    - sleep 15
    - docker compose exec -T client npm run lint

quality-review:
  stage: review
  extends: 
    - .frontend
  image: sonarsource/sonar-scanner-cli
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - docker run --rm -e SONAR_HOST_URL=$SONAR_HOST_URL -e SONAR_TOKEN=$SONAR_LOGIN -it -v ./frontend:/usr/src sonarsource/sonar-scanner-cli

